
artifact_types:

  tosca.artifacts.Deployment.Image.Container.Docker:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.1.1
    derived_from: tosca.artifacts.Deployment.Image
    description: Docker Container Image

  tosca.artifacts.Deployment.Image.VM.ISO:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.1.2
    derived_from: tosca.artifacts.Deployment.Image.VM
    description: Virtual Machine (VM) image in ISO disk format
    mime_type: application/octet-stream
    file_ext: [ iso ]

  tosca.artifacts.Deployment.Image.VM.QCOW2:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.1.3
    derived_from: tosca.artifacts.Deployment.Image.VM
    description: Virtual Machine (VM) image in QCOW v2 standard disk format
    mime_type: application/octet-stream
    file_ext: [ qcow2 ]

capability_types:

  tosca.capabilities.Container.Docker:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.2.1
    derived_from: tosca.capabilities.Container
    description: The type indicates capabilities of a Docker runtime environment (client).
    properties:
      version:
        description: >-
          The Docker version capability (i.e., the versions supported by the capability).
        type: list
        required: false
        entry_schema: version
      publish_all:
        description: >-
          Indicates that all ports (ranges) listed in the dockerfile using the EXPOSE keyword be
          published.
        type: boolean
        default: false
        required: false
      publish_ports:
        description: >-
          List of ports mappings from source (Docker container) to target (host) ports to publish.
        type: list
        entry_schema: PortSpec
        required: false
      expose_ports:
        description: >-
          List of ports mappings from source (Docker container) to expose to other Docker containers
          (not accessible outside host).
        type: list
        entry_schema: PortSpec
        required: false
      volumes:
        description: >-
          The dockerfile VOLUME command which is used to enable access from the Docker container to
          a directory on the host machine.
        type: list
        entry_schema: string
        required: false
      # ARIA NOTE: these are missing in the spec
      host_id:
        description: >-
          The optional identifier of an existing host resource that should be used to run this
          container on.
        type: string
        required: false
      volume_id:
        description: >-
          The optional identifier of an existing storage volume (resource) that should be used to
          create the container's mount point(s) on.
        type: string
        required: false

  # ARIA NOTE: missing in spec
  tosca.capabilities.Docker.Link:
    derived_from: tosca.capabilities.Root
    description: This is a capability that would mimic the Docker â€“link feature

node_types:

  tosca.nodes.Database.MySQL:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.3.1
    derived_from: tosca.nodes.Database
    requirements:
      - host:
          capability: tosca.capabilities.Container # ARIA NOTE: missing in spec
          node: tosca.nodes.DBMS.MySQL

  tosca.nodes.DBMS.MySQL:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.3.2
    derived_from: tosca.nodes.DBMS
    properties:
      port:
        description: reflect the default MySQL server port
        type: integer # AIRA NOTE: missing in spec
        default: 3306
      root_password:
        # MySQL requires a root_password for configuration
        # Override parent DBMS definition to make this property required
        type: string # AIRA NOTE: missing in spec
        required: true
    capabilities:
      # Further constrain the 'host' capability to only allow MySQL databases
      host:
        type: tosca.capabilities.Container # ARIA NOTE: missing in spec
        valid_source_types: [ tosca.nodes.Database.MySQL ]

  tosca.nodes.WebServer.Apache:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.3.3
    derived_from: tosca.nodes.WebServer

  tosca.nodes.WebApplication.WordPress:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.3.4
    derived_from: tosca.nodes.WebApplication
    properties:
      admin_user:
        type: string
        required: false # ARIA NOTE: missing in spec
      admin_password:
        type: string
        required: false # ARIA NOTE: missing in spec
      db_host:
        type: string
        required: false # ARIA NOTE: missing in spec
    requirements:
      - database_endpoint:
          capability: tosca.capabilities.Endpoint.Database
          node: tosca.nodes.Database
          relationship: tosca.relationships.ConnectsTo

  tosca.nodes.WebServer.Nodejs:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.3.5
    derived_from: tosca.nodes.WebServer
    properties:
      # Property to supply the desired implementation in the Github repository
      github_url:
        required: false
        type: string
        description: location of the application on the github.
        default: https://github.com/mmm/testnode.git
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard # ARIA NOTE: missing in spec
        inputs:
          github_url:
            type: string
            required: false # ARIA NOTE: missing in spec

  tosca.nodes.Container.Application.Docker:
    _extensions:
      specification: tosca-simple-1.0
      specification_section: 8.3.6
    derived_from: tosca.nodes.Container.Application
    requirements:
      - host:
          capability: tosca.capabilities.Container.Docker
      - database_link: # ARIA NOTE: missing in spec
          capability: tosca.capabilities.Docker.Link
